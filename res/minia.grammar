/*
 * Copyright 2018-2020 Mercedes Catherine Salazar
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * res/minia.grammar: Minia grammar as extracted from a Bison document.
 */

/*   A doc is a collection of functions, applications, and execution
 * requests. */
document :
  named_functions_and_applications_and_execution_requests
;
named_functions_and_applications_and_execution_requests :
  named_function named_functions_and_applications_and_execution_requests
| application named_functions_and_applications_and_execution_requests
| execution_request named_functions_and_applications_and_execution_requests
|
;
application :
  cli_application
;
cli_application :
  APPLICATION IDENTIFIER IS A COMMAND LINE INTERFACE
  APPLICATION AND THE ENTRY POINT IS FUNCTION IDENTIFIER
  APPLICATION ENDS
;
named_function :
  FUNCTION IDENTIFIER function_characterization_clause
  function_receives_clause function_returns_clause
  function_side_effects_clause AND DOES function_statements
  function_where_clauses FUNCTION ENDS
;
function_characterization_clause :
  IS A PURE FUNCTION
| IS A COMMAND LINE INTERFACE
  APPLICATION FUNCTION
;
function_receives_clause :
  RECEIVING function_receives_clause_inner
;
function_receives_clause_inner :
  NOTHING
| NOTHING AT ALL
| A STRING IDENTIFIER function_receives_clause_inner_continuation
| A NATURAL IDENTIFIER
;
function_receives_clause_inner_continuation :
  AND function_receives_clause_inner
|
;
function_returns_clause :
  RETURNING function_returns_clause_inner
;
function_returns_clause_inner :
  NOTHING AT ALL
| NOTHING
| A STRING
| A NATURAL
;
function_side_effects_clause :
  WITHOUT CAUSING SIDE EFFECTS
| SO IT CAUSES SIDE EFFECTS
;
function_where_clauses :
  WHERE function_where_clause function_where_clauses
|
;
function_where_clause :
  IDENTIFIER IS BOUND TO expression
;
execution_request :
  RUN COMMAND LINE INTERFACE APPLICATION IDENTIFIER
;
function_statements :
  function_statement SEQUENTIALLY BEFORE function_statements
| function_statement CONCURRENTLY WITH function_statements
| function_statement
;
function_statement :
  RUN expression
| RETURN expression
| PRINT expression
| NEW LINE
| READ NATURAL IDENTIFIER
;
call_options :
  BUILTIN
|
;
expressions_list :
  expression expressions_list_continuation
| NOTHING
;
expressions_list_continuation :
  AND expression expressions_list_continuation
|
;
expression :
  CONDITIONAL condition THEN expression ELSE expression CONDITIONAL
  ENDS
| STRING_LITERAL
/*
| TYPE OF expression
*/
| IDENTIFIER
/*
| LEFT_PARENS expression RIGHT_PARENS
*/
| expression TIMES expression
| expression DIVIDED BY expression
| expression MINUS expression
| DICE_EXPRESSION
| NATURAL_LITERAL
| INTEGER_LITERAL
| RATIONAL_LITERAL
/*
| CONCATENATE NATURAL_LITERAL TEXTS list_of_arguments
*/
| CALL call_options FUNCTION IDENTIFIER PASSING expressions_list CALL ENDS
;
/*
CANT HAS 'AND' PARTICLE HERE AS SEPARATOR, AS IT'S ALREADY THE OPERATIONS SEPARATOR, WOULD CREATE SR CONFLICT
*/
/*
list_of_arguments :
  list_of_arguments AND STRING_LITERAL
| list_of_arguments AND IDENTIFIER
|
;
*/
condition :
  expression IS LESS THAN expression
| expression IS GREATER THAN expression
;
