function main
	is a command line interface application function
	and receives nothing at all
	and returns nothing at all
	so it causes side effects
	and does
	print 'you roll 3d6 and get '
	/*   You can sequence up to five operations per function. */
	and then print value_rolls_results_
	and then print ', '
	and then print
		/*   The `if` statement, and expression, can be also a
		 * value. Note that the `if` statement and expression is
		 * an expression, and a value, like in functional
		 * languages such as _Lisps_ and _Haskells_; but is not
		 * an operation, as in the case of imperative
		 * programming such as C++. */
		if value_rolls_results_ is greater than 12
		then
			"that's awesome"
		else
			if value_rolls_results_ is less than 6
			then
				"that's bad luck"
			else
				"that's fine"
			end if
		end if
	and then new line

	/*   After the sequenced operations and before the end of the
	 * function, value bindings can be declared. Value expressions
	 * can be bound to names, then used inside the operations. */

	/*   The `value_rolls_results_` is a value bound to a _dice
	 * operator_ returned value, by virtue of this `where` clause. */
	where value_rolls_results_ is set to 3d6
end function main

application functions_structure
	is a command line interface application
	and the entry point is function main
end application functions_structure

run command line interface application functions_structure
