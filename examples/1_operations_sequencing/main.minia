comment
        Copyright 2018-2020 Mercedes Catherine Salazar

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing,
        software distributed under the License is distributed on an
        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        either express or implied.
        See the License for the specific language governing permissions
        and limitations under the License.

        examples/1_operations_sequencing/main.minia: An example of a
        function including a sequence of statements meant to be executed
        in order.
comment ends

function identifier main identifier ends
	is a command line interface application function
	and receives nothing at all
	and returns nothing at all
	so it causes side effects
	and executes statements sequentially
	and does
	print string literal you roll 3d6 and get  string literal ends
	comment   You can sequence up to five operations per function. comment ends
	and then print identifier value rolls results identifier ends
	and then print string literal ,  string literal ends
	and then print
		comment   The `if` statement, and expression, can be also a
		 * value. Note that the `if` statement and expression is
		 * an expression, and a value, like in functional
		 * languages such as _Lisps_ and _Haskells_; but is not
		 * an operation, as in the case of imperative
		 * programming such as C++. comment ends
		if identifier value rolls results identifier ends is greater than 12
		then
			string literal that's awesome string literal ends
		else
			if identifier value rolls results identifier ends is less than 6
			then
				string literal that's bad luck string literal ends
			else
				string literal that's fine string literal ends
			end if
		end if
	and then new line

	comment   After the sequenced operations and before the end of the
	 * function, value bindings can be declared. Value expressions
	 * can be bound to names, then used inside the operations. comment ends

	comment   The `value rolls results` identifier is a value bound to a _dice
	 * operator_ returned value, by virtue of this `where` clause. comment ends
	where identifier value rolls results identifier ends is bound to
		extension roll 3 6 sided dice extension ends
end function identifier main identifier ends

application identifier functions structure identifier ends
	is a command line interface application
	and the entry point is function identifier main identifier ends
end application identifier functions structure identifier ends

run command line interface application identifier functions structure identifier ends
